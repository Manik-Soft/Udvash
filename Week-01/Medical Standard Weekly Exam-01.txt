<div class="TakeExamWrapper">

    <div class="TakeExamHeader">
        <h2 style="font-size: 30px;">Medical + Varsity Math Program 2022</h2>
        <h3>1st Time All Exam + 3 Materials</h3>
        <h3> Medical Standard Weekly Exam-01</h3>
        <h2 style="font-size: 25px;">MCQ Master Set: 1 (Question &amp; Solution)</h2>
    </div>

            <div class="TakeExamBody">
                        <div id="pdfDisplayBox">
                            <input type="hidden" name="mcqAnalysisPdf" id="mcqAnalysisPdf" value="https://ums-public-temp-store.s3-ap-southeast-1.amazonaws.com/MasterSetMcqQuestionPdf/40298/Bn_S__8015fc4e-0bfc-4be7-abcd-15c34d5add9f.pdf">
                            <div id="app">
                                <div id="viewport-container">
                                    <div role="main" id="viewport"><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div><div style="width: 100%"><canvas width="1355" height="1944" style="width: 1100px; height: 1555px;"></canvas></div></div>
                                </div>
                            </div>
                        </div>

            </div>

    <div class="col-md-12">
        <div class="text-center">
            <a href="/Exam/Question?courseId=1013&amp;routineId=45417&amp;examId=40298" class="uu-button-style-4">Back</a>
        </div>
    </div>
      <script type="text/javascript">
      var base64PdfData = "";
      var pdfBynaryData = null;

      (function () {
          let currentPageIndex = 0;
          let pageMode = 1;
          let cursorIndex = Math.floor(currentPageIndex / pageMode);
          let pdfInstance = null;
          let totalPagesCount = 0;
          const viewport = document.querySelector("#viewport");
          window.initPDFViewer = function () {
              $("#viewport").html('<div id="WaitingForPdf" class="TakeExamHeader" data-report-status="1"><div style="width:10%; float:left;"><div class="loader"></div></div><div style="width:90%; float:left; text-align:left; margin-top:10px;"> <span>Generating....</span></div><div style="clear:both;"></div></div>');
              pdfjsLib.getDocument({ data: pdfBynaryData }).then(pdf => {
                  pdfInstance = pdf;
                  totalPagesCount = pdf.numPages;
                  render();
              });
          };

          function render() {
              cursorIndex = Math.floor(currentPageIndex / pageMode);
              const startPageIndex = cursorIndex * pageMode;

              const endPageIndex = totalPagesCount - 1;
              //const endPageIndex =
              //    startPageIndex + pageMode < totalPagesCount
              //        ? startPageIndex + pageMode - 1
              //        : totalPagesCount - 1;

              const renderPagesPromises = [];
              for (let i = startPageIndex; i <= endPageIndex; i++) {
                  renderPagesPromises.push(pdfInstance.getPage(i + 1));
              }
              Promise.all(renderPagesPromises).then(pages => {
                  const pagesHTML = `<div style="width: ${pageMode > 1 ? "50%" : "100%"
                      }"><canvas></canvas></div>`.repeat(pages.length);
                  viewport.innerHTML = pagesHTML;
                  pages.forEach(renderPage);
              });
          }

          function renderPage(page) {
              var oldPdfViewport = page.getViewport(1);
              const container =
                  viewport.children[page.pageIndex - cursorIndex * pageMode];
              console.log("container.offsetWidth / oldPdfViewport.width", container.offsetWidth / oldPdfViewport.width);
              var scale = (container.offsetWidth / oldPdfViewport.width) < 1.5 ? 1.5 : (container.offsetWidth / oldPdfViewport.width);

              var pdfViewport = page.getViewport(scale);
              // Support HiDPI-screens.
              var outputScale = window.devicePixelRatio || 1;
              oldPdfViewport = page.getViewport(container.offsetWidth / oldPdfViewport.width);
              const canvas = container.children[0];

              canvas.width = Math.floor(pdfViewport.width * outputScale)-20;
              canvas.height = Math.floor(pdfViewport.height * outputScale);
              canvas.style.width = Math.floor(oldPdfViewport.width) + "px";
              canvas.style.height = Math.floor(oldPdfViewport.height) + "px";

              var context = canvas.getContext('2d');
              var transform = outputScale !== 1
                  ? [outputScale, 0, 0, outputScale, 0, 0]
                  : null;

              var renderContext = {
                  canvasContext: context,
                  transform: transform,
                  viewport: pdfViewport
              };
              page.render(renderContext);
          }
      })();

      function downloadFile(filePath) {
          var request = new XMLHttpRequest();
          request.open('GET', filePath, true);
          request.responseType = 'blob';
          request.onload = function () {
              var reader = new FileReader();
              reader.readAsDataURL(request.response);
              reader.onload = function (e) {
                  base64PdfData = e.target.result;
                  base64PdfData = base64PdfData.replace("data:application/pdf;base64,", "");
                  pdfBynaryData = atob(base64PdfData);
                  initPDFViewer();
              };
          };
          request.send();
      }

      function getExt(filename) {
          var dot_pos = filename.lastIndexOf(".");
          if (dot_pos == -1) {
              return "";
          }
          return filename.substr(dot_pos + 1).toLowerCase();
      }

      function isPdf(filename) {
          var ext = getExt(filename);
          if (ext == "pdf") return true;
          else return false;
      }

      $(document).ready(function () {
          screen.orientation.addEventListener('change', function () {
            initPDFViewer();
          });

          if ($("#mcqAnalysisPdf").length > 0) {
              var pdflink = $("#mcqAnalysisPdf").val();
              if (pdflink != "" && pdflink != "undefined" && isPdf(pdflink)) {
                  downloadFile(pdflink);
              }
          }
      });
  </script>
</div>
